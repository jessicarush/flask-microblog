from flask import render_template, current_app
from flask_babel import _
from app.email import send_email


def send_password_reset_email(user):
    token = user.get_reset_password_token()
    send_email(_('Microblog: Password Reset'),
               sender=current_app.config['ADMINS'][0],
               recipients=[user.email],
               text_body=render_template('email/reset_password.txt',
                                         user=user, token=token),
               html_body=render_template('email/reset_password.html',
                                         user=user, token=token))


# Flask-Mail
# -----------------------------------------------------------------------------
# see notes in config.py

# send_password_reset_email()
# The interesting part in this function is that the text and HTML content for
# the emails is generated from templates using the render_template() function.
# The templates receive the user and the token as arguments, so that a
# personalized email message can be generated.

# In these two templates you'll see an _external=True argument. URLs that are
# generated by url_for() by default are relative URLs, so for example, the
# url_for('user', username='susan') call would return /user/susan. When
# _external=True is passed, complete URLs are generated, for example
# http://localhost:5000/user/susan (or the appropriate URL when the application
# is deployed on a domain name).

# Flask-Mail supports some features we're not utilizing here such as Cc and
# Bcc lists. See https://pythonhosted.org/Flask-Mail/
